  <%= wicked_pdf_stylesheet_link_tag "compiled/quizzes" %>
  <%= wicked_pdf_stylesheet_link_tag "compiled/g_vendor" %>

  <%= wicked_pdf_javascript_include_tag  "jquery-1.4.2.min" %>

  <script type="text/javascript" charset="utf-8">

      $(function (){
          var rightAnswers     = $('#questions.show_correct_answers:not(.survey_quiz) .selected_answer.correct_answer'),
                  wrongAnswers     = $('#questions.show_correct_answers:not(.survey_quiz) .selected_answer.wrong_answer'),
                  correctAnswers   = $('#questions.show_correct_answers:not(.survey_quiz) .question:not(.short_answer_question, #questions.show_correct_answers:not(.survey_quiz) .numerical_question) .correct_answer:not(.selected_answer)'),
                  shortAnswers     = $('#questions.show_correct_answers:not(.survey_quiz):not(.survey_results) .short_answer_question .answers_wrapper, #questions.show_correct_answers:not(.survey_results):not(.survey_quiz) .numerical_question .answers_wrapper, #questions.show_correct_answers:not(.survey_results):not(.survey_quiz) .equation_combinations_holder_holder.calculated_question_answers'),
                  unansweredQ      = $('.question.unanswered .header .question_name'),
                  creditPartial    = $('#questions.suppress_correct_answers:not(.survey_results) .question.partial_credit .header .question_name'),
                  creditFull       = $('#questions.suppress_correct_answers:not(.survey_results) .question.correct .header .question_name'),
                  creditNone       = $('#questions.suppress_correct_answers:not(.survey_results) .question.incorrect:not(.unanswered) .header .question_name'),
                  surveyAnswers    = $('#questions.survey_results .selected_answer'),
                  rightTpl         = $('<span />', { 'class': 'answer_arrow correct' }),
                  wrongTpl         = $('<span />', { 'class': 'answer_arrow incorrect' }),
                  correctTpl       = $('<span />', { 'class': 'answer_arrow info' }),
                  shortTpl         = $('<span />', { 'class': 'answer_arrow info' }),
                  unansweredTpl    = $('<span />', { 'class': 'answer_arrow incorrect' }),
                  creditFullTpl    = $('<span />', { 'class': 'answer_arrow correct' }),
                  creditPartialTpl = $('<span />', { 'class': 'answer_arrow incorrect' }),
                  creditNoneTpl    = $('<span />', { 'class': 'answer_arrow incorrect' }),
                  surveyAnswerTpl  = $('<span />', { 'class': 'answer_arrow info' }),
                  idGenerator      = 0;

          $.each([rightTpl, wrongTpl, correctTpl, shortTpl, surveyAnswerTpl], function() {
              this.css({ left: -128, top: 5 });
          });
          $.each([unansweredTpl, creditFullTpl, creditNoneTpl, creditPartialTpl], function() {
              this.css({ left: -108, top: 9 });
          });

//
//      rightTpl.text(I18n.t('answers.correct', 'Correct!'));
//      wrongTpl.text(I18n.t('answers.you_answered', 'You Answered'));
//      correctTpl.text(I18n.t('answers.right', 'Correct Answer'));
//      shortTpl.text(I18n.t('answers.correct_answers', 'Correct Answers'));
//      unansweredTpl.text(I18n.t('answers.unanswered', 'Unanswered'));
//      creditFullTpl.text(I18n.t('answers.correct', 'Correct!'));
//      creditPartialTpl.text(I18n.t('answers.partial', 'Partial'));
//      creditNoneTpl.text(I18n.t('answers.incorrect', 'Incorrect'));
//      surveyAnswerTpl.text(I18n.t('answers.you_answered', 'You Answered'));


          rightTpl.text( 'Correct!');
          wrongTpl.text( 'You Answered');
          correctTpl.text( 'Correct Answer');
          shortTpl.text( 'Correct Answers');
          unansweredTpl.text( 'Unanswered');
          creditFullTpl.text('Correct!');
          creditPartialTpl.text( 'Partial');
          creditNoneTpl.text( 'Incorrect');
          surveyAnswerTpl.text('You Answered');

          rightAnswers.prepend(rightTpl);
          wrongAnswers.prepend(wrongTpl);
          correctAnswers.prepend(correctTpl);
          shortAnswers.prepend(shortTpl);
          unansweredQ.prepend(unansweredTpl);
          creditPartial.prepend(creditPartialTpl);
          creditFull.prepend(creditFullTpl);
          creditNone.prepend(creditNoneTpl);
          surveyAnswers.prepend(surveyAnswerTpl);

          // adjust these down a little so they align better w/ answers.
          $('.short_answer_question .answer_arrow').css('top', 5);

          // CNVS-6634:
          //
          // Enable a11y for <input /> elements that receive focus by speaking the
          // answer result which is contained in the arrow marker.
          $('#questions .answer_arrow').each(function() {

              var $arrow  = $(this),

              // This might be either an ".answer", or an ".answers_wrapper" in case
              // of multiple-answer questions, we'll be using it to find the target(s),
              // and to generate an ID, see below.
                      $answer = $arrow.parent(),

              // The element(s) that will be tagged with @aria-describedby
                      $target = $(),

              // @aria-describedby needs to reference an @id, so we must stamp each
              // arrow with a proper id: (conflicts are resolved later)

                      arrowId = $answer.prop('id');

              // User-generated incorrect answers are not tagged with an @id, so we
              // auto-generate ones:
              if (!arrowId) {
                  arrowId = [ 'user_answer', ++idGenerator ].join('_');
              }

              // Suffix it with _arrow to avoid conflicts
              arrowId = [ arrowId, 'arrow' ].join('_');

              // Stamp the arrow
              $arrow.prop('id', arrowId);

              // Locate the targets.
              //
              // The :visible filter is required because .answer nodes will contain
              // <input /> items for each question type's answers, but only the actual
              // question type answers will be visible, and we need those.
              $target = $answer.find('input:visible');

              // For the question types below, there won't be any visible <input />,
              // so we'll be tagging the ".answers_wrapper" ($answer) node instead:
              //
              // - Fill in the blanks questions
              // - Numerical questions
              //
              // (This may only occur if the student chooses a wrong answer.)
              if (!$target.length) {
                  $target = $answer;
              }

              // We're done, define the @aria-describedby node referencing the @id we
              // got above.
              $target.attr('aria-describedby', arrowId);
          });
      });
  </script>


  <style>
       .answer_arrow {
           background-image: url('<%= "file://#{Rails.root.join('public','images','answers_sprite.png')}" %>');
       }
       .answer_arrow.correct:before, .answer_arrow.correct:after, .answer_arrow.incorrect:before, .answer_arrow.incorrect:after, .answer_arrow.info:before, .answer_arrow.info:after {
            background-image: url('<%= "file://#{Rails.root.join('public','images','answers_sprite.png')}" %>');
       }
      .page-break { display:block; clear:both; page-break-after:always; }

      .table-view th, .table-view td{
          border:none;
          padding: 8px;
          line-height: 20px;
          text-align: left;
      }
  </style>

      <% users.each do |get_user| %>

    <div style="border: #b7b0b0 1px solid; width: 1000px; margin: 0px auto; padding: 20px;">

    <header class="quiz-header">
          <h2>
            Assessment Report for <%= get_user[:candidate_detail].name %>
          </h2>
          <hr>
          <h3>
            <%# @user_quiz.each do |quiz| %>
                <% if get_user[:quiz].quiz_title %>
                    <%= get_user[:quiz].quiz_title %>
                <% end %>
                </h3>

                </header>
    <% if check_pdf_options[:allow_personal_detail]  == "true" %>
    <table>
      <tbody>
      <tr>
        <td class="">
          <h3>Personal Information</h3>
        </td>
      </tr>
      </tbody>

    </table>

        <table class="table-view">
          <% if get_user[:candidate_detail][:name] != nil %><tr><td style="font-weight: bold;">Name</td><td><%= get_user[:candidate_detail].name %></td><td valign="top" rowspan="5"><img width="200px;" height="200px;" src="<%= get_user[:profile_pic] %>" ></td></tr><% end %>
          <% if get_user[:candidate_detail][:birthdate] != nil %><tr><td style="font-weight: bold;">Date of Birth</td><td><%= date_string(get_user[:candidate_detail].birthdate) %></td></tr><% end %>
          <% if get_user[:candidate_detail][:gender] != nil %><tr><td style="font-weight: bold;">Gender</td><td><%= get_user[:candidate_detail][:gender] %></td></tr><% end %>
          <% if get_user[:candidate_detail][:phone] != nil %><tr><td style="font-weight: bold;">Mobile Number</td><td><%= get_user[:candidate_detail][:phone] %></td></tr><% end %>
          <% if get_user[:candidate_detail][:unique_id] != nil %><tr><td style="font-weight: bold;">Email ID</td><td><%= get_user[:get_pseudonym][:unique_id] %></td></tr><% end %>
          <% if get_user[:candidate_detail][:address] != nil %><tr><td style="font-weight: bold;">Address</td><td><%= get_user[:candidate_detail][:address] %></td></tr><% end %>
          <% if get_user[:candidate_detail][:city] != nil %><tr><td></td><td><%= get_user[:candidate_detail][:city] %></td></tr><% end %>
          <% if get_user[:candidate_detail][:state] != nil %><tr><td></td><td><%= get_user[:candidate_detail][:state] %></td></tr><% end %>
          <% if get_user[:candidate_detail][:zip_code] != nil %><tr><td></td><td><%= get_user[:candidate_detail][:zip_code] %></td></tr><% end %>
        </table>
        <br/>
        <br/>
        <% end %>
          <% if check_pdf_options[:allow_academic_detail]  == "true" %>
              <% if get_user[:user_data].length > 0 %>
                  <h3>Academic Qualifications</h3>
                  <table class="table table-bordered" cellpadding="10">
                    <thead>
                    <th>Degree</th>
                    <th>Discipline</th>
                    <th>School/ College</th>
                    <th>Year of Completion</th>
                    <th>%/ CGPA</th>
                    </thead>


                    <% get_user[:user_data].each do |link| %>
                        <tr>
                          <td><%= link.degree %></td>
                          <td><%= link.discipline %></td>
                          <td><%= link.college %></td>
                          <td><%= link.year_of_completion %></td>
                          <td><%= link.percentage %></td>
                        </tr>
                    <% end %>

                  </table>
                  <br/>
                  <br/>
              <% end %>
              <% end %>
              <% if check_pdf_options[:allow_employment_detail] == "true" %>
                  <% if get_user[:user_experience].length > 0 %>
                      <h3>Employment Details</h3>
                      <table class="table table-bordered" cellpadding="10">
                        <thead>
                        <th>Organization</th>
                        <th>From(MM/YYYY)</th>
                        <th>To(MM/YYYY)</th>
                        <th>Designation</th>
                        <th>Permanent/ contract</th>
                        <th>Reason for leaving</th>

                        </thead>

                        <% get_user[:user_experience].each do |emp| %>
                            <tr>

                              <td><%= emp.organization %></td>
                              <td><%= emp.from_date %></td>
                              <td><%= emp.end_date %></td>
                              <td><%= emp.designation %></td>
                              <td><%= emp.permanent %></td>
                              <td><%= emp.reason_for_leaving %></td>

                            </tr>
                        <% end %>
                      </table>
                      <br/>
                      <br/>
                  <% end %>
                  <% end %>
                  <% if check_pdf_options[:allow_assessment_detail] == "true" %>
                      <% if get_user[:submission] %>
                          <h3>Assessment Details</h3>
                          <table class="table table-bordered">
                            <thead>
                            <tr>
                              <td>Assessment Name</td>
                              <td>No. of questions</td>
                              <% if get_user[:submission] %>
                                  <td>Marks Scored / Max Marks</td>
                                  <td>Percentage Scored</td>
                              <% end %>
                              <td>Time Taken</td>
                              <td>Allotted Time</td>
                            </tr>
                            </thead>
                            <tr>
                              <td><%= get_user[:quiz].quiz_title %></td>
                              <td><%= get_user[:quiz].points_possible %></td>
                              <td>
                                <% if get_user[:submission].score %><%= get_user[:submission].score %><% else %> 0 <% end %>/ <%= get_user[:quiz].points_possible %></td>
                              <td><% if get_user[:quiz].points_possible && get_user[:submission].score %>
                                    <% percentage = (get_user[:submission].score / get_user[:quiz].points_possible) * 100 %>
                                    <%= percentage.round(2) %> %
                                <% end %>
                              </td>
                              <td><%= duration_in_minutes(get_user[:submission].duration) %></td>

                              <td>
                                <% if get_user[:quiz].time_limit %>
                                    <%= get_user[:quiz].time_limit %> minutes
                                <% end %>
                              </td>
                            </tr>
                          </table>

                          <% submission_data = get_user[:submission].submission_data %>
                          <% if get_user[:submission].finished_at %>
                              <% if submission_data %>
                                  <div id="questions" class="assessment_results  <%= (show_correct_answers? ? 'suppress_correct_answers' : 'suppress_correct_answers') %>">
                                    <% get_user[:submission][:quiz_data].each do |q| %>
                                        <%= render :partial => "quizzes/quizzes/display_question", :object => q, :locals => {:user_answer => submission_data.find{|a| a[:question_id] == q[:id]}, :assessment_results => true, :context => context, :quiz => get_user[:quiz], :type => "report"} %>
                                    <% end %>
                                  </div>
                              <% end %>
                          <% end %>
                      <% end %>
                      <% end %>
                                <% if check_pdf_options[:allow_image_proctoring]  == "true"  %>
                    <div style="width: 100%;margin-left:65px;">
                      <% get_user[:image_proctoring].each do |image| %>
                          <% if image != [] %>
                              <h3>Proctoring Snapshots</h3>
                              <% image.each do |image_snap| %>
                                  <div style="width:200px;display: inline-block;border:1px solid black;margin:5px 7px 8px 5px;">
                                    <img src="<%= image_snap[:image_url] %>" style="width:200px;height: 200px;"><br/>
                                    Time elapsed : <%= image_snap[:image_time] %>
                                  </div>
                              <% end %>
                          <% end %>
                      <% end %>
                    </div>
                 <% end %>
    </div>
    <div class="page-break"></div>
   <% end %>
